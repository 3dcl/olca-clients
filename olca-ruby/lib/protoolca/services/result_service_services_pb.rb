# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: result_service.proto for package 'protolca.services'

require 'grpc'
require 'result_service_pb'

module Protolca
  module Services
    module ResultService
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'protolca.services.ResultService'

        # Calculates a result for the given calculation setup.
        rpc :Calculate, ::Protolca::ProtoCalculationSetup, ::Protolca::Services::ProtoResultRef
        # Get all technosphere flows of the underlying product system of the given
        # result.
        rpc :GetTechFlows, ::Protolca::Services::ProtoResultRef, stream(::Protolca::Services::ProtoTechFlow)
        # Get the environmental flows of the given result.
        rpc :GetEnviFlows, ::Protolca::Services::ProtoResultRef, stream(::Protolca::Services::ProtoEnviFlow)
        # Get the impact categories of the given result.
        rpc :GetImpactCategories, ::Protolca::Services::ProtoResultRef, stream(::Protolca::ProtoRef)
        # Get the inventory of the given result.
        rpc :GetTotalInventory, ::Protolca::Services::ProtoResultRef, stream(::Protolca::Services::ResultValue)
        # Get the total impact assessment result of the given result.
        rpc :GetTotalImpacts, ::Protolca::Services::ProtoResultRef, stream(::Protolca::Services::ResultValue)
        # Get the direct contribution of a TechFlow to a flow, impact, or cost
        # result. 'Direct' means that this is only the contribution that is
        # directly associated with the production of a product or treatment of
        # a waste flow excluding contributions of upstream and downstream processes.
        rpc :GetDirectContribution, ::Protolca::Services::TechFlowContributionRequest, ::Protolca::Services::ResultValue
        rpc :GetTotalContribution, ::Protolca::Services::TechFlowContributionRequest, ::Protolca::Services::ResultValue
        rpc :GetTotalContributionOfOne, ::Protolca::Services::TechFlowContributionRequest, ::Protolca::Services::ResultValue
        # Get the used impact factors of a result. The request can be for:
        #
        # * an indicator: returns the non-zero factors of that indicator
        # * a flow: returns the factors of that flow for all indicators (including
        #   zero values)
        # * an indicator and flow: returns the factor for that flow which may be zero
        #
        # Nothing is returned if no indicator and flow is given or if the result does
        # not have an impact assessment result.
        rpc :GetImpactFactors, ::Protolca::Services::ImpactFactorRequest, stream(::Protolca::Services::ImpactFactorResponse)
        # Disposes the given result on the server side.
        rpc :Dispose, ::Protolca::Services::ProtoResultRef, ::Google::Protobuf::Empty
      end

      Stub = Service.rpc_stub_class
    end
  end
end
