# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data_fetch_service.proto

require 'commons_pb'
require 'google/protobuf/empty_pb'
require 'olca_pb'
require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("data_fetch_service.proto", :syntax => :proto3) do
    add_message "protolca.services.GetRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
      optional :id, :string, 2
    end
    add_message "protolca.services.FindRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
      oneof :by do
        optional :id, :string, 2
        optional :name, :string, 3
      end
    end
    add_message "protolca.services.GetAllRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
      optional :page_size, :int32, 2
      oneof :paging do
        optional :page, :int32, 3
        optional :skip_paging, :bool, 4
      end
    end
    add_message "protolca.services.GetAllResponse" do
      optional :type, :enum, 1, "protolca.ProtoType"
      optional :total_count, :int32, 2
      optional :page_size, :int32, 3
      optional :page, :int32, 4
      repeated :data_set, :message, 5, "protolca.services.ProtoDataSet"
    end
    add_message "protolca.services.SearchRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
      optional :query, :string, 2
    end
    add_message "protolca.services.GetDescriptorsRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
      oneof :by do
        optional :id, :string, 2
        optional :attributes, :message, 3, "protolca.services.GetDescriptorsRequest.Attributes"
      end
    end
    add_message "protolca.services.GetDescriptorsRequest.Attributes" do
      optional :name, :string, 1
      optional :category, :string, 2
    end
    add_message "protolca.services.GetCategoryContentRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
      optional :category, :string, 2
    end
    add_message "protolca.services.GetCategoryTreeRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
    end
    add_message "protolca.services.CategoryTree" do
      optional :type, :enum, 1, "protolca.ProtoType"
      optional :id, :string, 2
      optional :name, :string, 3
      repeated :sub_tree, :message, 4, "protolca.services.CategoryTree"
    end
    add_message "protolca.services.GetCountRequest" do
      optional :type, :enum, 1, "protolca.ProtoType"
    end
    add_message "protolca.services.GetCountResponse" do
      optional :count, :int32, 1
    end
  end
end

module Protolca
  module Services
    GetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetRequest").msgclass
    FindRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.FindRequest").msgclass
    GetAllRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetAllRequest").msgclass
    GetAllResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetAllResponse").msgclass
    SearchRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.SearchRequest").msgclass
    GetDescriptorsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetDescriptorsRequest").msgclass
    GetDescriptorsRequest::Attributes = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetDescriptorsRequest.Attributes").msgclass
    GetCategoryContentRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetCategoryContentRequest").msgclass
    GetCategoryTreeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetCategoryTreeRequest").msgclass
    CategoryTree = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.CategoryTree").msgclass
    GetCountRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetCountRequest").msgclass
    GetCountResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("protolca.services.GetCountResponse").msgclass
  end
end
